{"version":3,"sources":["App.module.scss","components/Timer/Timer.module.scss","components/Options/Options.module.scss","redux/app-reducer.ts","Core/Core.ts","redux/timer-reducer.ts","redux/redux-reducers.ts","components/Start/Start.tsx","components/Options/Options.tsx","components/Cell/Cell.tsx","components/TimerTable/TimerTable.tsx","components/Timer/Timer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["module","exports","SET_GRID","SET_MOVEMENT","SET_START","SET_PRESET_ARR","SET_START_GAME","SET_SUCCESS","initialState","arr","movement","h","v","start","presetArr","startGame","success","setMovement","type","payload","appReducer","state","action","possibleMove","multiplicity","Math","sqrt","length","i","push","includes","splice","column","indexOf","j","swap","index1","index2","map","val","idx","MoveAside","from","displace","couple","swappedArr","swappedDisplace","swapFrom","swapTo","randomizedGrid","preset","gridSet","Set","rowLength","Number","zeroRow","nextRow","size","add","getRandomInt","arrSet","isSolved","index","set","reduce","accumulator","currentValue","array","result","max","floor","random","sortBy","sorting","sorted","undefined","sort","a","b","tempSorted","sortedToString","el","toString","resultSorted","res","newRes","k","time","SET_TIMER","CHANGE_SORT","SET_RESULT","timer","min","sec","direction","timerReducer","slice","reverse","join","RootReducer","combineReducers","game15","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","StyledButton","styled","button","props","Start","setGrid","setStart","setIsDone","setPresetArr","useState","disabled","setDisabled","useEffect","onClick","Options","setCounter","setOptions","onSubmit","grid","render","handleSubmit","submitting","form","pristine","values","className","styles","options","name","component","value","StyledCell","StyledEmpty","div","Cell","children","setSize","newSize","TableRows","Table","Body","Row","TimerTableContainer","connect","dispatch","useDispatch","sortable","celled","fixed","Header","HeaderCell","TimerContainer","setTimer","setResult","setTime","gameTimer","setTimeout","clearTimeout","timerWrap","AppContainer","withRouter","setStartGame","setPreset","showGrid","setShowGrid","showTimerDown","setShowTimerDown","counter","checkedArr","arrDone","shift","every","isDone","handleClick","e","currentTarget","innerHTML","app","header","wrapper","game","cell","optionsWrap","timerTable","GameOf15App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee4b8bd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3c1f6\",\"header\":\"App_header__B3P0W\",\"wrapper\":\"App_wrapper__2WyDl\",\"success\":\"App_success__3IY-M\",\"game\":\"App_game__Zi2wF\",\"counter\":\"App_counter__3HWmC\",\"optionsWrap\":\"App_optionsWrap__11SWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerWrap\":\"Timer_timerWrap__We04d\",\"time\":\"Timer_time__3AjSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Options_options__f5xYX\"};","const SET_GRID = 'SET-GRID';\r\nconst SET_MOVEMENT = 'SET-MOVEMENT';\r\nconst SET_START = 'SET_START';\r\nconst SET_PRESET_ARR = 'SET-PRESET-ARR';\r\nconst SET_START_GAME = 'SET-START-GAME';\r\nconst SET_SUCCESS = 'SET-SUCCESS';\r\n\r\nexport type SetMovementType = {\r\n    h: Array<number>\r\n    v: Array<number>\r\n}\r\ntype InitialState = {\r\n    arr: Array<number>\r\n    movement: SetMovementType\r\n    start: 'Disabled' | 'Start' | 'Restart'\r\n    presetArr: Array<string>\r\n    startGame: boolean\r\n    success: boolean\r\n}\r\n let initialState: InitialState = {\r\n     arr: [],\r\n     movement: {\r\n         h: [],\r\n         v: []\r\n     },\r\n     start: 'Disabled',\r\n     presetArr: [],\r\n     startGame: false,\r\n     success: false\r\n    }\r\n\r\n\r\ntype ActionTypes = ReturnType<typeof setGrid> | ReturnType<typeof setMovement> | ReturnType<typeof setStart> | ReturnType<typeof setPresetArr> | ReturnType<typeof setStartGame> | ReturnType<typeof setIsDone>\r\n\r\n    const appReducer = (state = initialState, action: ActionTypes): InitialState => {\r\n        switch(action.type){\r\n            case SET_GRID:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload\r\n                }\r\n            case SET_MOVEMENT:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload\r\n                }\r\n            case SET_START:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload\r\n                }\r\n            case SET_PRESET_ARR:\r\n                return {\r\n                    ...state,\r\n                    presetArr: [...state.presetArr, ...action.payload.presetArr]\r\n                }\r\n            case SET_START_GAME:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload\r\n                }\r\n            case SET_SUCCESS:\r\n                return {\r\n                    ...state,\r\n                    ...action.payload\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n    export const setGrid = (arr: Array<number>) => (\r\n        {type: SET_GRID, payload: {arr}} as const\r\n        )\r\n\r\n    export const setMovement = (movement: SetMovementType)=> (\r\n        {type: SET_MOVEMENT, payload: {movement}\r\n    } as const)\r\n\r\n    export const setStart = (start: 'Disabled' | 'Start' | 'Restart') => (\r\n        {type: SET_START, payload: {start}\r\n    } as const)\r\n\r\n\r\n    export const setStartGame = (startGame: boolean) => (\r\n        {type: SET_START_GAME, payload: {startGame}} as const\r\n    )\r\n\r\n    export const setPresetArr = (presetArr: Array<string>) => (\r\n        {type: SET_PRESET_ARR, payload: {presetArr}\r\n    } as const)\r\n\r\n\r\n    export const setIsDone = (success: boolean) => (\r\n        {type: SET_SUCCESS, payload: {success}\r\n    } as const)\r\n    export default appReducer","import { setMovement } from \"../redux/app-reducer\";\r\nimport { Result } from \"../redux/timer-reducer\";\r\n\r\ninterface IParam {\r\n  (arg0: { h: Array<number>, v: Array<number> }): void;\r\n}\r\n\r\nexport const possibleMove = (arr: Array<number>, setMovement: IParam): void => {\r\n  const multiplicity = Math.sqrt(arr.length)\r\n  let length = multiplicity;\r\n  let v: Array<number> = [], h: Array<number> = []\r\n  for (let i = 0; i < length; i++) {\r\n    h.push(arr[i]);\r\n    if (h.includes(0) && h.length % multiplicity === 0) {\r\n      if (h.length > multiplicity) h.splice(0, h.length - multiplicity)\r\n      break;\r\n    } else if (h.length % multiplicity === 0) {\r\n      length += multiplicity;\r\n    }\r\n  }\r\n  let column = arr.indexOf(0)\r\n  while (column > multiplicity - 1) {\r\n    column -= multiplicity\r\n  }\r\n  for (let j = column; j < arr.length;) {\r\n    v.push(arr[j])\r\n    j += multiplicity\r\n  }\r\n  setMovement({ h, v })\r\n}\r\n\r\nconst swap = (arr: Array<number>, index1: number, index2: number): Array<number> => arr.map((val, idx, arr) => {\r\n  if (idx === index1) return arr[index2];\r\n  if (idx === index2) return arr[index1];\r\n  return val;\r\n});\r\n\r\nexport const MoveAside = (arr: Array<number>, from: number, displace: Array<number>): Array<number> => {\r\n  let couple: Array<number> = [];\r\n  let swappedArr = arr;\r\n  let swappedDisplace = [...displace]\r\n\r\n  if (swappedDisplace.indexOf(from) < swappedDisplace.indexOf(0)) {\r\n    for (let i = displace.length - 1; i >= 0; i--) {\r\n      couple = [swappedDisplace[i], swappedDisplace[i - 1]]\r\n      if (couple[0] === 0) {\r\n        let swapFrom = swappedArr.indexOf(couple[0])\r\n        let swapTo = swappedArr.indexOf(couple[1])\r\n        swappedArr = swap(swappedArr, swapFrom, swapTo)\r\n        swappedDisplace = [...swap(swappedDisplace, swappedDisplace.indexOf(couple[0]), swappedDisplace.indexOf(couple[1]))]\r\n        possibleMove(swappedArr, setMovement)\r\n      }\r\n      if (couple[1] === from) break;\r\n    }\r\n  } else {\r\n    for (let i = 0; i < displace.length; i++) {\r\n      couple = [swappedDisplace[i], swappedDisplace[i + 1]]\r\n      if (couple[0] === 0) {\r\n        let swapFrom = swappedArr.indexOf(couple[0])\r\n        let swapTo = swappedArr.indexOf(couple[1])\r\n        swappedArr = swap(swappedArr, swapFrom, swapTo)\r\n        swappedDisplace = [...swap(swappedDisplace, swappedDisplace.indexOf(couple[0]), swappedDisplace.indexOf(couple[1]))]\r\n        possibleMove(swappedArr, setMovement)\r\n      }\r\n      if (couple[1] === from) break;\r\n    }\r\n  }\r\n  return swappedArr\r\n}\r\n\r\nexport const randomizedGrid = (preset: string): Array<number> => {\r\n  const gridSet: Set<number> = new Set();\r\n  let rowLength = Math.sqrt(Number(preset));\r\n  let zeroRow = 1;\r\n  const nextRow = rowLength\r\n\r\n  while (gridSet.size < Number(preset)) {\r\n    gridSet.add(getRandomInt(Number(preset)))\r\n  }\r\n  let arrSet: Array<number> = [...gridSet]\r\n\r\n  if (nextRow % 2 === 0) {\r\n    while (arrSet.indexOf(0) >= rowLength) {\r\n      rowLength += nextRow\r\n      zeroRow += 1\r\n    }\r\n  } else {\r\n    zeroRow = 0\r\n  }\r\n\r\n  if ((isSolved(arrSet) + zeroRow) % 2 !== 0) {\r\n    let index: number = 0, index2: number = 0\r\n    for (let i = 0; i < arrSet.length; i++) {\r\n      if (arrSet[i] > arrSet[i + 1] && arrSet[i] !== 0 && arrSet[i + 1] !== 0) {\r\n        index = i;\r\n        index2 = i + 1;\r\n      }\r\n    }\r\n    arrSet = swap(arrSet, index, index2)\r\n  }\r\n  return arrSet\r\n}\r\n\r\nconst isSolved = (set: Array<number>): number => {\r\n  let solved = set.reduce((accumulator, currentValue, index, array) => {\r\n    let result = 0\r\n    for (index; index < array.length; index++) {\r\n      if (currentValue > array[index + 1] && array[index + 1] !== 0 && currentValue !== 0) result += 1\r\n    }\r\n    return accumulator += result\r\n  }, 0)\r\n  return solved\r\n}\r\n\r\nconst getRandomInt = (max: number) => {\r\n  return Math.floor(Math.random() * max);\r\n}\r\n\r\nexport const sortBy = (arr: Array<number>, sorting?: string): number[] => {\r\n  let sorted = [...arr]\r\n  if (sorting === undefined) {\r\n    sorted.sort((a, b) => a - b)\r\n    return sorted\r\n  } else if (sorting === 'ascending') {\r\n    const tempSorted = [...sorted]\r\n    sorted = []\r\n    let sortedToString: Array<Array<string>> = tempSorted.sort((a, b) => a - b).map(el => [el.toString()])\r\n\r\n    for (let i = 0; i < sortedToString.length; i++) {\r\n      while (sortedToString[i][0].length < 6) {\r\n        sortedToString[i][0] = '0' + sortedToString[i][0]\r\n      }\r\n      for (let j = 0; j < sortedToString[i][0].length; j += 2) {\r\n        sorted.push(Number(sortedToString[i][0][j] + sortedToString[i][0][j + 1]))\r\n      }\r\n    }\r\n    return sorted\r\n  }\r\n  return sorted\r\n}\r\n\r\nexport const resultSorted = (arr: Array<number>, res: Result[]): Result[] => {\r\n  let newRes: Array<Result> = [],\r\n    i = 0\r\n  while (i < arr.length) {\r\n    for (let k = 0; k < res.length; k++) {\r\n      if (arr[i] === res[k].time[0]) {\r\n        newRes.push(res[k])\r\n      }\r\n      i++\r\n    }\r\n  }\r\n  return newRes;\r\n}\r\n\r\nexport const isDone = (arr: Array<number>): boolean => {\r\n  const checkedArr = [...arr];\r\n  const arrDone = sortBy(arr)\r\n  arrDone.push(arrDone.shift()!)\r\n  return checkedArr.every((el, i) => el === arrDone[i])\r\n}","import { resultSorted, sortBy } from \"../Core/Core\";\r\n\r\nconst SET_TIMER = 'SET-TIMER';\r\nconst CHANGE_SORT = 'CHANGE-SORT';\r\nconst SET_RESULT = 'SET-RESULT';\r\n\r\nexport type Result = {\r\n    time: Array<number>, grid: string\r\n}\r\ntype InitialState = {\r\n    timer: { h: number, min: number, sec: number }\r\n    column: string\r\n    direction: \"ascending\" | \"descending\" | undefined\r\n    result: Array<Result>\r\n}\r\n\r\nlet initialState: InitialState = {\r\n    timer: {\r\n        h: 0,\r\n        min: 0,\r\n        sec: 0\r\n    },\r\n    column: '',\r\n    direction: undefined,\r\n    result: []\r\n}\r\n\r\ntype ActionTypes = ReturnType<typeof setTimer> | ReturnType<typeof setResult> | ReturnType<typeof changeSort>\r\n\r\nconst timerReducer = (state = initialState, action: ActionTypes): InitialState => {\r\n    switch (action.type) {\r\n        case SET_TIMER:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_RESULT:\r\n            return {\r\n                ...state,\r\n                result: [...state.result, ...action.payload.result]\r\n            }\r\n        case CHANGE_SORT:\r\n            if (state.column === action.payload) {\r\n                return {\r\n                    ...state,\r\n                    result: state.result.slice().reverse(),\r\n                    direction:\r\n                        state.direction === 'ascending' ? 'descending' : 'ascending',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                column: action.payload,\r\n                result: resultSorted(sortBy(state.result.map(el => Number(el.time.join(''))), 'ascending'), state.result),\r\n                direction: 'ascending',\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setTimer = (timer: { h: number, min: number, sec: number }) => (\r\n    {\r\n        type: SET_TIMER, payload: { timer }\r\n    } as const)\r\n\r\nexport const setResult = (result: Array<Result>) => (\r\n    {\r\n        type: SET_RESULT, payload: { result }\r\n    } as const)\r\n\r\nexport const changeSort = (column: string) => (\r\n    { type: CHANGE_SORT, payload: column } as const\r\n)\r\n\r\nexport default timerReducer","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport appReducer from './app-reducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport timerReducer from './timer-reducer';\r\n\r\nlet RootReducer = combineReducers({\r\n    game15: appReducer,\r\n    timer: timerReducer\r\n});\r\n\r\ntype RootReducerType = typeof RootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(RootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\nexport default store;","import React, { FC, MouseEventHandler, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ButtonProps {\r\n  readonly start: 'Disabled' | 'Start' | 'Restart'\r\n  readonly disabled: boolean\r\n  readonly onClick: MouseEventHandler<HTMLButtonElement>\r\n}\r\n\r\nconst StyledButton = styled.button<ButtonProps>`\r\n  color: white;\r\n  display: flex;\r\n  align-self:center;\r\n  justify-content: center;\r\n  background-color: ${props => props.start === 'Start' ? \"red\" : props.start === 'Restart' ? \"green\" : \"grey\"};\r\n  height: 25%;\r\n  min-width: 35%;\r\n  border: blue 5px solid;\r\n  padding-bottom: 3px;\r\n`;\r\n\r\ntype StartProps = {\r\n  setGrid:(arg0: Array<number>) => void\r\n  start: 'Disabled' | 'Start' | 'Restart'\r\n  preset: string | undefined\r\n  setStart: (arg0: 'Disabled' | 'Start' | 'Restart') => void\r\n  randomizedGrid: (arg0: string) => Array<number>\r\n  setIsDone: (arg0: boolean) => void\r\n  setPresetArr: (arg0: Array<string>) => void\r\n}\r\n\r\nconst Start: FC<StartProps & {className?: string}>= ({setGrid, start, preset, setStart, randomizedGrid, setIsDone, setPresetArr}) => {\r\n\r\n    const [disabled, setDisabled] = useState(false)\r\n\r\n\r\n\r\n    useEffect(()=> {\r\n      preset ? setDisabled(false) : setDisabled(true)\r\n      \r\n     \r\n    }, [disabled, preset])\r\n\r\n  const handleclick = () => {\r\n    if(start === 'Start')setStart('Restart')\r\n    if(start === 'Restart'){\r\n      setStart('Start')\r\n      setIsDone(false)\r\n     if(preset){\r\n       setGrid(randomizedGrid(preset))\r\n       setPresetArr([preset])\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n       <StyledButton disabled={disabled} onClick={handleclick} start={start}>\r\n       {start} \r\n    </StyledButton>\r\n  \r\n    )}\r\n\r\n\r\nexport default Start;","import styles from './Options.module.scss'\r\nimport { Field, Form } from 'react-final-form';\r\nimport { Dispatch, FC, SetStateAction } from 'react';\r\n\r\ntype OptionProps = {\r\n  setPresetArr: (arg: Array<string>)=> void\r\n  setCounter: Dispatch<SetStateAction<number | undefined>>\r\n  setStart: (arg0: \"Start\" | \"Disabled\" | \"Restart\") => void\r\n  setOptions: (arg1: boolean) => void\r\n  randomizedGrid: (arg1: string) => Array<number>\r\n  setGrid: (arg1: Array<number>) => void\r\n  setIsDone: (arg1: boolean) => void\r\n}\r\n\r\ninterface GridType {grid: string}\r\n\r\nconst Options: FC<OptionProps & {className: string}> = ({setPresetArr, setCounter, setStart, setOptions, randomizedGrid, setGrid, setIsDone}): JSX.Element => {\r\n\r\n    const onSubmit = ({grid}: GridType) => {\r\n      setOptions(false)\r\n      if(grid)setStart('Start')\r\n      setGrid(randomizedGrid(grid))\r\n      setIsDone(false)\r\n      setPresetArr([grid])\r\n      setCounter(5)\r\n    }\r\n\r\n    return (\r\n        <Form \r\n        onSubmit={onSubmit}\r\n        render={({ handleSubmit, form, submitting, pristine, values }) => {\r\n            return <form  className={styles.options} onSubmit={handleSubmit} >\r\n                    <div>       \r\n             <label>Choose the Grid</label>\r\n             </div>\r\n            <div>\r\n            <label>\r\n                <Field\r\n                  name=\"grid\"\r\n                  component=\"input\"\r\n                  type=\"radio\"\r\n                  value=\"9\"\r\n                />{' '}\r\n                3*3\r\n              </label>\r\n              <label>\r\n                <Field\r\n                  name=\"grid\"\r\n                  component=\"input\"\r\n                  type=\"radio\"\r\n                  value=\"16\"\r\n                />{' '}\r\n                4*4\r\n              </label>\r\n              <label>\r\n                <Field\r\n                  name=\"grid\"\r\n                  component=\"input\"\r\n                  type=\"radio\"\r\n                  value=\"25\"\r\n                />{' '}\r\n                5*5\r\n              </label>\r\n              <label>\r\n                <Field\r\n                  name=\"grid\"\r\n                  component=\"input\"\r\n                  type=\"radio\"\r\n                  value=\"36\"\r\n                />{' '}\r\n                6*6\r\n              </label>\r\n          </div>\r\n                <button type='submit' disabled={submitting || pristine}>Set Up</button>\r\n            </form>\r\n        }} \r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default Options","import React, { MouseEventHandler, useEffect, useState } from 'react';\r\nimport { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface CellProps {\r\n  readonly size: string\r\n}\r\nconst StyledCell = styled.button<CellProps>`\r\ndisplay: flex;\r\nheight: ${props => props.size ? props.size : null};\r\nwidth: ${props => props.size ? props.size : null};\r\ncolor:cadetblue;\r\nborder: 2px solid rgb(95, 6, 6);\r\nborder-radius: 15%;\r\nalign-items: center;\r\njustify-content: center;\r\nfont-size: 4rem;\r\n&:hover {\r\n  background-color: rgb(215, 215, 226);\r\n  color: red;\r\n  font-weight: bold;\r\n  text-shadow: black 0 0 2rem;\r\n  border: 2.5px solid rgb(179, 35, 35);\r\n}\r\n`;\r\n\r\nconst StyledEmpty = styled.div<CellProps>`\r\ndisplay: flex;\r\nheight: ${props => props.size ? props.size : null};\r\nwidth: ${props => props.size ? props.size : null};\r\n`;\r\n\r\ntype Type = {children: ReactNode\r\n   onClick: MouseEventHandler<HTMLButtonElement>\r\n   preset: string | undefined\r\n  }\r\nconst Cell = ({ children, onClick, preset }: Type) => {\r\n  const [size, setSize] = useState('')\r\n  useEffect(() => {\r\n    const newSize = `${100/Math.sqrt(Number(preset))}%`\r\n    setSize(newSize)\r\n  },[preset])\r\n\r\n    return (\r\n      children !== 0 ? <StyledCell size={size} onClick={onClick}>\r\n        {children}\r\n      </StyledCell> : <StyledEmpty size={size}/>)\r\n  }\r\n\r\n  export default Cell;\r\n","import { FC } from 'react';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Table } from 'semantic-ui-react';\r\nimport { AppStateType } from '../../redux/redux-reducers';\r\nimport { Result } from '../../redux/timer-reducer';\r\nimport './TimerTable.module.scss';\r\n\r\ntype TableType = {\r\n    result: Array<Result>\r\n    grid: Array<string>\r\n    direction: \"ascending\" | \"descending\" | undefined\r\n    column: string | undefined\r\n}\r\n\r\ntype RowsType = {\r\n    result: Array<Result>\r\n}\r\n\r\nconst TableRows: FC<RowsType> = ({ result }): JSX.Element => {\r\n    return (\r\n        <Table.Body>\r\n            {result.map((el, index) => {\r\n                const h = Math.floor(el.time[0] / 3600) >= 10 ? Math.floor(el.time[0] / 3600) : `0${Math.floor(el.time[0] / 3600)}`\r\n                const min = Math.floor(el.time[0] % 3600 / 60) >= 10 ? Math.floor(el.time[0] % 3600 / 60) : `0${Math.floor(el.time[0] % 3600 / 60)}`\r\n                const sec = Math.floor(el.time[0] % 3600 % 60) >= 10 ? Math.floor(el.time[0] % 3600 % 60) : `0${Math.floor(el.time[0] % 3600 % 60)}`\r\n                return <Table.Row key={index}>\r\n                    <Table.Cell>{el.grid}</Table.Cell><Table.Cell>{`${h}.${min}.${sec}`}</Table.Cell>\r\n                </Table.Row>\r\n            })}\r\n        </Table.Body>\r\n    )\r\n}\r\n\r\nconst TimerTable: FC<TableType & { className: string }> = ({ result, grid, direction, column }): JSX.Element => {\r\n    const dispatch = useDispatch()\r\n\r\n    return <Table sortable celled fixed>\r\n        <Table.Header>\r\n            <Table.Row>\r\n                <Table.HeaderCell\r\n                    sorted={column === 'grid' ? direction : undefined}\r\n                    onClick={() => dispatch({ type: 'CHANGE-SORT', payload: 'grid' })}\r\n                >\r\n                    Grid\r\n                </Table.HeaderCell>\r\n                <Table.HeaderCell\r\n                    sorted={column === 'time' ? direction : undefined}\r\n                    onClick={() => dispatch({ type: 'CHANGE-SORT', payload: 'time' })}\r\n                >\r\n                    Time\r\n                    {direction === 'ascending' ? <i className=\"fas fa-sort-up\" /> : direction === 'descending' ? <i className=\"fas fa-sort-down\" /> : null}\r\n                </Table.HeaderCell>\r\n            </Table.Row>\r\n        </Table.Header>\r\n        {result.length > 0 ? <TableRows result={result} /> : null\r\n        }\r\n    </Table>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    grid: state.game15.presetArr,\r\n    direction: state.timer.direction,\r\n    column: state.timer.column\r\n})\r\n\r\nconst TimerTableContainer = compose(\r\n    connect(mapStateToProps)(TimerTable)\r\n)\r\n\r\nexport default TimerTableContainer;","import React, { FC, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-reducers';\r\nimport { Result, setResult, setTimer } from '../../redux/timer-reducer';\r\nimport styles from './Timer.module.scss'\r\n\r\ntype TimerProps = {\r\n    timer: { h: number, min: number, sec: number }\r\n    startGame: boolean\r\n    setTimer: (arg0: { h: number, min: number, sec: number }) => void\r\n    success: boolean\r\n    setResult: (result: Array<Result>) => void\r\n    grid: Array<string>\r\n}\r\n\r\nconst Timer: FC<TimerProps> = ({ timer, startGame, setTimer, success, setResult, grid }): JSX.Element => {\r\n    const { h, min, sec } = timer\r\n    const [time, setTime] = useState(0)\r\n    useEffect(() => {\r\n        if (startGame) {\r\n            const gameTimer = setTimeout(() => {\r\n                setTime(h * 3600 + min * 60 + sec + 1)\r\n            }, 1000)\r\n\r\n            return () => { clearTimeout(gameTimer) }\r\n        }\r\n    }, [success, startGame, h, min, sec])\r\n\r\n    useEffect(() => {\r\n        if (startGame) {\r\n\r\n            if (!success) {\r\n                setTimer({ h: Math.floor(time / 3600), min: Math.floor(time % 3600 / 60), sec: Math.floor(time % 3600 % 60) })\r\n            } else if (success && time !== 0) {\r\n                setResult([{ time: [time], grid: grid[grid.length - 1] }])\r\n                setTime(0)\r\n                setTimer({ h: 0, min: 0, sec: 0 })\r\n            }\r\n        }\r\n    }, [time, startGame, h, min, sec, success, setResult, setTimer, grid])\r\n\r\n    return <div className={styles.timerWrap}>\r\n        <div className={styles.time}>{h >= 10 ? `${h}` : `0${h}`}.{min >= 10 ? `${min}` : `0${min}`}.{sec >= 10 ? `${sec}` : `0${sec}`} </div>\r\n    </div>\r\n}\r\n\r\ntype MapStatePropsType = {\r\n    grid: Array<string>\r\n    timer: { h: number, min: number, sec: number }\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    grid: state.game15.presetArr,\r\n    timer: state.timer.timer\r\n})\r\n\r\nconst TimerContainer = compose(\r\n    connect(mapStateToProps, { setTimer, setResult })(Timer)\r\n)\r\n\r\nexport default TimerContainer;","import React, { FC, MouseEventHandler, useEffect, useState } from 'react';\nimport { connect, Provider } from 'react-redux';\nimport { BrowserRouter, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport styles from './App.module.scss';\nimport { setGrid, setMovement, setStart, setPresetArr, setStartGame, setIsDone, SetMovementType } from './redux/app-reducer';\nimport store from './redux/redux-reducers';\nimport Start from './components/Start/Start';\nimport Options from './components/Options/Options';\nimport Cell from './components/Cell/Cell';\nimport { isDone, MoveAside, possibleMove, randomizedGrid } from './Core/Core';\nimport TimerTableContainer from './components/TimerTable/TimerTable';\nimport Timer from './components/Timer/Timer';\nimport { AppStateType } from './redux/redux-reducers';\nimport { Result } from './redux/timer-reducer';\n\ntype Props = {\n  arr: Array<number>\n  movement: SetMovementType\n  start: 'Disabled' | 'Start' | 'Restart'\n  presetArr: Array<string>\n  setGrid: (arg0: Array<number>) => void\n  setStart: (arg0: 'Disabled' | 'Start' | 'Restart') => void\n  setPresetArr: (arg0: Array<string>) => void\n  setMovement: (arg0: SetMovementType) => void\n  startGame: boolean\n  setStartGame: (arg0: boolean) => void\n  setIsDone: (arg0: boolean) => void\n  success: boolean\n  result: Array<Result>\n}\n\nconst App: FC<Props> = ({\n  arr, movement, start, presetArr, setGrid, setStart,\n  setPresetArr, setMovement, startGame, setStartGame,\n  setIsDone, success, result\n}): JSX.Element => {\n\n  const [options, setOptions] = useState(true)\n  const [preset, setPreset] = useState<string | undefined>()\n  const [showGrid, setShowGrid] = useState(false)\n  const [showTimerDown, setShowTimerDown] = useState(false)\n  const [counter, setCounter] = useState<number | undefined>();\n\n  useEffect(() => {\n    if (presetArr.length !== 0) setPreset(`${presetArr[presetArr.length - 1]}`)\n    if (arr.length === 0 && preset) setGrid(randomizedGrid(preset))\n    if (arr.length !== 0) {\n      const goodGame = isDone(arr)\n      if (goodGame) {\n        setIsDone(true)\n\n      } else possibleMove(arr, setMovement)\n    }\n    if (success) setCounter(5)\n  }, [arr, setMovement, preset, presetArr, success, setGrid, setIsDone])\n\n  useEffect(() => {\n\n    if (start === 'Restart') {\n      setShowGrid(false)\n      setShowTimerDown(true)\n    } else if (start === 'Start') {\n      setShowGrid(false)\n      setCounter(5)\n\n    }\n  }, [showGrid, start])\n\n  const handleClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n\n    if (start === 'Restart') {\n      if (movement.v.includes(Number(e.currentTarget.innerHTML))) {\n        setGrid(MoveAside(arr, Number(e.currentTarget.innerHTML), movement.v))\n      } else if (movement.h.includes(Number(e.currentTarget.innerHTML))) {\n        setGrid(MoveAside(arr, Number(e.currentTarget.innerHTML), movement.h))\n      }\n    }\n  }\n\n\n  useEffect(() => {\n    if (showGrid) {\n      setShowTimerDown(false)\n    }\n    if (showTimerDown) {\n      if (counter !== undefined) counter > 0 ? setTimeout(() => setCounter(counter - 1), 1000) : setShowGrid(true);\n    }\n    if (counter === 0) setStartGame(true)\n\n  }, [counter, showTimerDown, setStartGame, showGrid]);\n\n\n  return (\n    <div className={styles.app} >\n      <div>\n        <header className={styles.header} >\n          <div>Game of 15</div>\n        </header>\n        <div className={styles.wrapper} >\n          {success ? <div className={styles.success}>SUCCESS</div> : null}\n          {counter === 0 ? <Timer startGame={startGame} success={success} /> : null}\n          {start !== 'Disabled' ? <div className={styles.game}> {showGrid ?\n            arr.map((cell, index) => <Cell onClick={handleClick} key={index} preset={preset}>{cell}</Cell>)\n            : <div className={styles.counter}>{counter}</div>\n          }</div> : null}\n          <Start setPresetArr={setPresetArr} setGrid={setGrid} start={start} preset={preset} setStart={setStart} randomizedGrid={randomizedGrid} setIsDone={setIsDone} />\n          <div className={styles.optionsWrap}>\n            <button onClick={() => options ? setOptions(false) : setOptions(true)}><p>Options</p></button>\n            {options ? <Options setCounter={setCounter} setOptions={setOptions} className={styles.options}\n              setGrid={setGrid} randomizedGrid={randomizedGrid} setStart={setStart} setPresetArr={setPresetArr}\n              setIsDone={setIsDone} />\n              : null}\n          </div>\n        </div>\n      </div>\n      <TimerTableContainer className={styles.timerTable} result={result} />\n    </div>\n  );\n}\n\ntype MapStatePropsType = {\n  arr: Array<number>,\n  movement: SetMovementType,\n  start: string,\n  presetArr: Array<string>,\n  startGame: boolean,\n  success: boolean,\n  result: Array<Result>\n}\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\n  arr: state.game15.arr,\n  movement: state.game15.movement,\n  start: state.game15.start,\n  presetArr: state.game15.presetArr,\n  startGame: state.game15.startGame,\n  success: state.game15.success,\n  result: state.timer.result\n})\n\nconst AppContainer = compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps,\n    {\n      setGrid,\n      setMovement,\n      setStart,\n      setPresetArr,\n      setStartGame,\n      setIsDone\n    }))(App)\n\nconst GameOf15App = () => {\n  return <BrowserRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </BrowserRouter>\n}\n\nexport default GameOf15App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GameOf15App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GameOf15App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}